name: CI

on: 
    push:
        branches:
            - develop


jobs:
    build-and-test: 
        runs-on: ubuntu-latest
        services: 

            api: 
                image: node:18
                ports: 
                    - 5000:5000

        steps: 
            # API services below
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                node-version: '20'

            - name: Install dependencies
              working-directory: ./api
              run: npm install

            - name: Cache Node.js modules for API
              uses: actions/cache@v3
              with: 
                path: |
                  ~/.npm
                  ./api/node_modules
                key: ${{ runner.os }}-node-${{ hashFiles('**/api/package-lock.json') }}
                restore-keys: |
                  ${{ runner.os }}-node-
            
            - name: Install dependencies if package.json changes
              working-directory: ./api
              run: |
                if [ -f package.json ]; then
                  npm ci
                else
                  echo "No changes in package.json"
                fi

            - name: Run tests
              working-directory: ./api
              run: npm test

            - name: Generate API Documentation
              if: needs.build-and-test.outputs.api_docs_changed == 'true'
              working-directory: ./api
              run: npm run docs:generate

            - name: Install Redoc CLI
              working-directory: ./api
              run: npm install --save-dev redoc-cli

            - name: Generate HTML documentation
              working-directory: ./api
              run: npx redoc-cli bundle docs/openapi.json -o docs/index.html

            - name: Upload OpenAPI docs as CI artifact
              uses: actions/upload-artifact@v4
              with:
                name: openapi-docs
                path: ./api/docs
        
            # Frontend services below
            - name: Build Frontend Docker Image
              run: |
                cd frontend
                docker build -t frontend:ci .

            - name: Cache Node.js modules for Frontend
              uses: actions/cache@v3
              with: 
                path: |
                  ~/.npm
                  ./frontend/node_modules
                key: ${{ runner.os}}-frontend-${{ hashFiles('**/frontend/package-lock.json') }}
                restore-keys: |
                  ${{ runner.os}}-frontend-

            - name: Install dependencies if package.json changes
              working-directory: ./frontend
              run: |
                if [ -f package.json ]; then
                  npm ci
                else
                  echo "No changes in package.json"
                fi

            - name: Notification of Failure
              if: failure()
              run: |
                echo "Build failed"

            - name: Run Frontend Tests    
              run: |
                cd frontend 
                npm install
                npm test

    deploy-docs:
            needs: build-and-test
            runs-on: ubuntu-latest
            steps:
              - name: Checkout code
                uses: actions/checkout@v4

              - name: Download docs artifact
                uses: actions/download-artifact@v4
                with:
                  name: openapi-docs
                  path: ./api/docs

              - name: Deploy API docs to GitHub Pages
                uses: peaceiris/actions-gh-pages@v3
                with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  publish_dir: ./api/docs


# test to see if the build works on github actions once more
   # npm test
